<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>    
        <!-- 要调用的工作类 -->
        <bean id="orderCancelQuartzJob" class="com.dearho.cs.quartz.OrderCancelQuartzJob">
        	<property name="ordersService" ref="ordersService"/>
        	<property name="ordersDetailService" ref="ordersDetailService"/>
        	<property name="accountService" ref="accountService"/>
        	<property name="subscriberService" ref="subscriberService"/>
        	<property name="carService" ref="carService"/>
        	<property name="strategyBaseService" ref="strategyBaseService"/>
        </bean>
        
        <!-- 定义调用对象和调用对象的方法 -->
        <bean id="orderCancelTask" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
            <!-- 调用的类 -->
            <property name="targetObject">
                <ref bean="orderCancelQuartzJob"/>
            </property>
            <!-- 调用类中的方法 -->
            <property name="targetMethod">
                <value>execute</value>
            </property>
        </bean>
        <!-- 定义触发时间 -->
        <bean id="orderCancelTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
            <property name="jobDetail">
                <ref bean="orderCancelTask"/>
            </property>
            <!-- cron表达式 -->
            <property name="cronExpression">
                <!-- 每分钟执行一次 -->
                <value>0 */1 * * * ?</value>
            </property>
        </bean>
        
       	<bean id="orderTimeOutQuartzJob" class="com.dearho.cs.quartz.OrderTimeOutQuartzJob">
        	<property name="ordersService" ref="ordersService"/>
        	<property name="ordersDetailService" ref="ordersDetailService"/>
        	<property name="ticketsService" ref="ticketsService"/>
        	<property name="accountService" ref="accountService"/>
        	<property name="subscriberService" ref="subscriberService"/>
        	<property name="carService" ref="carService"/>
        	<property name="strategyBaseService" ref="strategyBaseService"/>
        </bean>
        
       <!-- 定义调用对象和调用对象的方法 -->
        <bean id="orderTimeOutTask" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
            <!-- 调用的类 -->
            <property name="targetObject">
                <ref bean="orderTimeOutQuartzJob"/>
            </property>
            <!-- 调用类中的方法 -->
            <property name="targetMethod">
                <value>execute</value>
            </property>
        </bean>
        <!-- 定义触发时间 -->
        <bean id="orderTimeOutTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
            <property name="jobDetail">
                <ref bean="orderTimeOutTask"/>
            </property>
            <!-- cron表达式 -->
            <property name="cronExpression">
                <!-- 每分钟执行一次 -->
                <value>0 */1 * * * ?</value>
            </property>
        </bean> 
        
        
       	<!-- 要调用的工作类 -->
        <bean id="orderDetailPayCheckQuartzJob" class="com.dearho.cs.quartz.OrderDetailPayCheckQuartzJob">
        	<property name="ordersService" ref="ordersService"/>
        	<property name="ordersDetailService" ref="ordersDetailService"/>
        	<property name="accountService" ref="accountService"/>
        	<property name="subscriberService" ref="subscriberService"/>
        	<property name="carService" ref="carService"/>
        </bean>
        
        <!-- 定义调用对象和调用对象的方法 -->
        <bean id="orderDetailPayCheckTask" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
            <!-- 调用的类 -->
            <property name="targetObject">
                <ref bean="orderDetailPayCheckQuartzJob"/>
            </property>
            <!-- 调用类中的方法 -->
            <property name="targetMethod">
                <value>execute</value>
            </property>
        </bean>
        <!-- 定义触发时间 -->
        <bean id="orderDetailPayCheckTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
            <property name="jobDetail">
                <ref bean="orderDetailPayCheckTask"/>
            </property>
            <!-- cron表达式 -->
            <property name="cronExpression">
                <!-- 每分钟执行一次 -->
                <value>0 */1 * * * ?</value>
            </property>
        </bean>
        
         <!--定时查询特来电充电站信息 -->
        <bean id="chargingStationQueryQuartzJob" class="com.dearho.cs.quartz.ChargingStationQueryQuartzJob">
        	<property name="teldIntrfStationService" ref="teldIntrfStationService"/>
        	<property name="teldIntrfPileService" ref="teldIntrfPileService"/>
        </bean>
        
        <!-- 定义调用对象和调用对象的方法 -->
        <bean id="chargingStationQueryTask" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
            <!-- 调用的类 -->
            <property name="targetObject">
                <ref bean="chargingStationQueryQuartzJob"/>
            </property>
            <!-- 调用类中的方法 -->
            <property name="targetMethod">
                <value>execute</value>
            </property>
        </bean>
        <!-- 定义触发时间 -->
        <bean id="chargingStationQueryTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
            <property name="jobDetail">
                <ref bean="chargingStationQueryTask"/>
            </property>
            <!-- cron表达式 -->
            <property name="cronExpression">
                <!-- 每天中午12点查询 -->
                <value>0 0 12 * * ?</value>
            </property>
        </bean>
        
        
        
        <!-- 总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序  -->
        <bean id="startQuertz" lazy-init="false" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
            <property name="triggers">
                <list>
                <!-- 
                    <ref bean="orderCancelTrigger"/>
                    <ref bean="orderTimeOutTrigger"/>
                    <ref bean="orderDetailPayCheckTrigger"/>
                    <ref bean="chargingStationQueryTrigger"/>
                    -->
                </list>
            </property>
        </bean>
    
</beans>
<!-- 
"0 0 12 * * ?" 每天中午12点触发 
"0 15 10 ? * *" 每天上午10:15触发 
"0 15 10 * * ?" 每天上午10:15触发 
"0 15 10 * * ? *" 每天上午10:15触发 
"0 15 10 * * ? 2005" 2005年的每天上午10:15触发 
"0 * 14 * * ?" 在每天下午2点到下午2:59期间的每1分钟触发 
"0 0/5 14 * * ?" 在每天下午2点到下午2:55期间的每5分钟触发 
"0 0/5 14,18 * * ?" 在每天下午2点到2:55期间和下午6点到6:55期间的每5分钟触发 
"0 0-5 14 * * ?" 在每天下午2点到下午2:05期间的每1分钟触发 
"0 10,44 14 ? 3 WED" 每年三月的星期三的下午2:10和2:44触发 
"0 15 10 ? * MON-FRI" 周一至周五的上午10:15触发 
"0 15 10 15 * ?" 每月15日上午10:15触发 
"0 15 10 L * ?" 每月最后一日的上午10:15触发 
"0 15 10 ? * 6L" 每月的最后一个星期五上午10:15触发 
"0 15 10 ? * 6L 2002-2005" 2002年至2005年的每月的最后一个星期五上午10:15触发 
"0 15 10 ? * 6#3" 每月的第三个星期五上午10:15触发 

   每隔5秒执行一次：*/5 * * * * ?

   每隔1分钟执行一次：0 */1 * * * ?

   每天23点执行一次：0 0 23 * * ?

   每天凌晨1点执行一次：0 0 1 * * ?

   每月1号凌晨1点执行一次：0 0 1 1 * ?

   每月最后一天23点执行一次：0 0 23 L * ?

   每周星期天凌晨1点实行一次：0 0 1 ? * L


 -->